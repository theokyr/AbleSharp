name: Build AbleSharp

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
    paths-ignore:
      - 'docs/**'
      - '.github/*.md'
      - 'LICENSE'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/*.md'
      - 'LICENSE'

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_FILE: 'AbleSharp.sln'
  GUI_PROJECT: 'AbleSharp.GUI/AbleSharp.GUI.csproj'
  CLI_PROJECT: 'AbleSharp.CLI/AbleSharp.CLI.csproj'

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            runtime: 'win-x64'
            gui_name: 'AbleSharp.GUI-windows'
            cli_name: 'AbleSharp.CLI-windows'
            exe_ext: '.exe'
          - os: ubuntu-latest
            runtime: 'linux-x64'
            gui_name: 'AbleSharp.GUI-linux'
            cli_name: 'AbleSharp.CLI-linux'
            exe_ext: ''
          - os: macos-latest
            runtime: 'osx-x64'
            gui_name: 'AbleSharp.GUI-macos'
            cli_name: 'AbleSharp.CLI-macos'
            exe_ext: ''

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration ${{ matrix.configuration }} --no-restore

      # Build GUI App
      - name: Publish GUI
        run: dotnet publish ${{ env.GUI_PROJECT }} --configuration ${{ matrix.configuration }} --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --output ./publish/gui

      # Build CLI App
      - name: Publish CLI
        run: dotnet publish ${{ env.CLI_PROJECT }} --configuration ${{ matrix.configuration }} --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --output ./publish/cli
      
      # Compress artifacts
      - name: Compress artifacts
        shell: bash
        run: |
          # Function to create zip file
          create_zip() {
            local source_dir=$1
            local output_name=$2
            local exe_name=$3
          
            cd "$source_dir"
            if [ ! -f "$exe_name" ] || [ ! -s "$exe_name" ]; then
              echo "::error::Executable $exe_name not found or empty in $source_dir"
              exit 1
            fi
          
            if [ "${{ matrix.os }}" = "windows-latest" ]; then
              7z a -tzip "../../$output_name.zip" "$exe_name"
            else
              zip -9 "../../$output_name.zip" "$exe_name"
            fi
            cd ../..
          }
          
          # Create zip for GUI
          create_zip "publish/gui" "${{ matrix.gui_name }}" "AbleSharp.GUI${{ matrix.exe_ext }}"
          
          # Create zip for CLI
          create_zip "publish/cli" "${{ matrix.cli_name }}" "AbleSharp.CLI${{ matrix.exe_ext }}"

      # Upload GUI artifacts
      - name: Upload GUI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.gui_name }}
          path: ${{ matrix.gui_name }}.zip
          retention-days: 5
          compression-level: 0  # Already compressed
          if-no-files-found: error

      # Upload CLI artifacts
      - name: Upload CLI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.cli_name }}
          path: ${{ matrix.cli_name }}.zip
          retention-days: 5
          compression-level: 0  # Already compressed
          if-no-files-found: error

  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Generate SHA-256 checksums
        run: |
          cd artifacts
          sha256sum *.zip > SHA256SUMS.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*.zip
            artifacts/SHA256SUMS.txt
          draft: false
          prerelease: false
          generate_release_notes: true