name: Build AbleSharp.GUI

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_FILE: 'AbleSharp.sln'
  PROJECT_PATH: 'AbleSharp.GUI/AbleSharp.GUI.csproj'

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            runtime: 'win-x64'
            output_name: 'AbleSharp.GUI-windows'
          - os: ubuntu-latest
            runtime: 'linux-x64'
            output_name: 'AbleSharp.GUI-linux'
          - os: macos-latest
            runtime: 'osx-x64'
            output_name: 'AbleSharp.GUI-macos'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration ${{ matrix.configuration }} --no-restore

      - name: Publish
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration ${{ matrix.configuration }} --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --output ./publish/${{ matrix.output_name }}

      - name: Create ZIP archive
        shell: bash
        run: |
          cd publish
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a -tzip ${{ matrix.output_name }}.zip ./${{ matrix.output_name }}/*
          else
            zip -r ${{ matrix.output_name }}.zip ./${{ matrix.output_name }}/*
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output_name }}
          path: publish/${{ matrix.output_name }}.zip
          if-no-files-found: error

  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            AbleSharp.GUI-windows/*.zip
            AbleSharp.GUI-linux/*.zip
            AbleSharp.GUI-macos/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true